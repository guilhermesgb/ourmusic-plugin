apply plugin: 'com.android.library'

repositories {
  mavenCentral()
}

project.group = 'com.ourmusic.plugin'

dependencies {
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile files('./libs/jnihelpers-1.0.jar')
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)

        ndk {
            moduleName "gnustl_shared"
            moduleName "spotify_embedded_shared"
            moduleName "spotify_sdk"
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['libs']
            res.srcDirs = ['res']
            jniLibs.srcDir = ['jni']
            jni.srcDirs = []
        }
    }

    productFlavors {
        armv7 {
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        arm {
            ndk {
                abiFilter "armeabi"
            }
        }
        fat
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        def ndkDir

        Properties properties = new Properties()
        File localProps = project.rootProject.file('local.properties')
        if (localProps.exists()) {
            properties.load(localProps.newDataInputStream())
            ndkDir = properties.getProperty('ndk.dir')
        } else {
            ndkDir = System.getenv('ANDROID_NDK_HOME')
        }

        if (!ndkDir) {
            throw new ProjectConfigurationException("Cannot find android ndk.", null)
        }

        commandLine "$ndkDir/ndk-build",
            '-C', file('jni').absolutePath,
            '-j', Runtime.runtime.availableProcessors(),
            'all',
            'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir

        Properties properties = new Properties()
        File localProps = project.rootProject.file('local.properties')
        if (localProps.exists()) {
            properties.load(localProps.newDataInputStream())
            ndkDir = properties.getProperty('ndk.dir')
        } else {
            ndkDir = System.getenv('ANDROID_NDK_HOME')
        }

        if (!ndkDir) {
            throw new ProjectConfigurationException("Cannot find android ndk.", null)
        }

        commandLine "$ndkDir/ndk-build",
            '-C', file('jni').absolutePath,
            'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn buildNative
    }
}
